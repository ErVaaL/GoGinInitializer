name: Go CI/CD Pipeline

on:
  push:
    branches: [main, feature/*, fix/*]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "staging"
      version:
        description: "Release version"
        required: false
      notify-team:
        description: "Notify team"
        required: false
        default: "true"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
            sh -s -- -b $HOME/go/bin v1.54.2
      - name: Add $HOME/go/bin to PATH
        run: echo "$HOME/go/bin" >> $GITHUB_PATH
      - name: Run golangci-lint
        run: golangci-lint run ./...

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - name: Check gofmt
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Code is not formatted:" && gofmt -l . && exit 1
          fi

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Add $HOME/go/bin to PATH
        run: echo "$HOME/go/bin" >> $GITHUB_PATH
      - name: Run govulncheck
        run: govulncheck ./...

  unit-tests:
    runs-on: ubuntu-latest
    needs: [lint, format, security-audit]
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - run: go test -v -cover ./...
      - uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - run: go build -o goGinInitializer .
      - uses: actions/upload-artifact@v4
        with:
          name: goGinInitializer
          path: goGinInitializer

  deploy:
    runs-on: self-hosted
    needs: build
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy via custom action
        uses: ./.github/actions/custom-deploy
        with:
          environment: ${{ github.event.inputs.environment || 'staging' }}
          version: ${{ github.event.inputs.version || 'latest' }}
          notify-team: ${{ github.event.inputs.notify-team || 'true' }}
